{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Todos REST API"
  },
  "host": "localhost:3000",
  "basePath": "",
  "tags": [
    {
      "name": "Todos",
      "description": "API for todos"
    },
    {
      "name": "Categories",
      "description": "API for categories"
    },
    {
      "name": "Tags",
      "description": "API for tags"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/todos": {
      "get": {
        "tags": [
          "Todos"
        ],
        "summary": "Get all todos from the database",
        "responses": {
          "200": {
            "description": "Response will be like below",
            "schema": {
              "$ref": "#/definitions/Todos"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Todos"
        ],
        "summary": "Create new todo with given payload",
        "parameters": [
          {
            "name": "todo",
            "in": "body",
            "description": "Todo payload that we want to create",
            "schema": {
              "$ref": "#/definitions/NewTodoPayload"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Response will be like below",
            "schema": {
              "$ref": "#/definitions/Todos"
            }
          }
        }
      },
      "put": {
        "summary": "Update todo with given payload",
        "tags": [
          "Todos"
        ],
        "parameters": [
          {
            "name": "Todos",
            "in": "body",
            "description": "Todos with updated values",
            "schema": {
              "$ref": "#/definitions/UpdateTodoPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated todo call sample response",
            "schema": {
              "$ref": "#/definitions/UpdateTodoResponse"
            }
          }
        }
      }
    },
    "/todos/{todoId}": {
      "parameters": [
        {
          "name": "todoId",
          "in": "path",
          "required": true,
          "description": "ID of the todo",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Todos"
        ],
        "summary": "Get todo with given ID",
        "responses": {
          "200": {
            "description": "Todo response format",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete todo with given ID",
        "tags": [
          "Todos"
        ],
        "responses": {
          "200": {
            "description": "Deleted todo format",
            "schema": {
              "$ref": "#/definitions/DeleteTodoResponse"
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories from the database",
        "responses": {
          "200": {
            "description": "Response will be like below",
            "schema": {
              "$ref": "#/definitions/Categories"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get all tags from the database",
        "responses": {
          "200": {
            "description": "Response will be like below",
            "schema": {
              "$ref": "#/definitions/Tags"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Todo": {
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "title": {
          "type": "string"
        },
        "isCompleted": {
          "type": "boolean"
        },
        "targetDate": {
          "type": "string"
        },
        "category": {
          "type": "object",
          "$ref": "#/definitions/Category"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      }
    },
    "NewTodoPayload": {
      "required": [
        "title"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "targetDate": {
          "type": "string",
          "format": "date"
        },
        "isCompleted": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "title": "test 927",
        "isCompleted": true,
        "targetDate": "2019-09-26T18:30:00.000Z",
        "tags": [
          "5bd1c78577b8753a98d67e81"
        ],
        "category": "5bd1c7771597333a787ef716"
      }
    },
    "DeleteTodoResponse": {
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "targetDate": {
          "type": "string",
          "format": "date"
        },
        "isCompleted": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "title": "test 927",
        "isCompleted": true,
        "targetDate": "2019-09-26T18:30:00.000Z",
        "tags": [
          "5bd1c78577b8753a98d67e81"
        ],
        "category": "5bd1c7771597333a787ef716"
      }
    },
    "Todos": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Todo"
      }
    },
    "UpdateTodoPayload": {
      "required": [
        "title"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "targetDate": {
          "type": "string",
          "format": "date"
        },
        "isCompleted": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {"title":"test 9281","isCompleted":false,"targetDate":"2019-09-27T18:30:00.000Z","tags":["5bd1c78577b8753a98d67e81","5bd1c78577b8753a98d67e82"],"category":"5bd1c7771597333a787ef717","id":"5d8ef6c95163d30017f9450d"}
    },
    "UpdateTodoResponse": {
      "example": {"n":1,"nModified":1,"ok":1}
    },
    "Tag": {
      "required": [
        "_id",
        "name"
      ],
      "properties": {
        "_id": {
        "type": "string",
        "uniqueItems": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Category": {
      "required": [
        "_id",
        "name"
      ],
      "properties": {
        "_id": {
        "type": "string",
        "uniqueItems": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Categories": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Category"
      }
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    }
  }
}
